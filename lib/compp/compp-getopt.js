// Generated by CoffeeScript 1.9.2
var defineArgRegex, displayHelp, displayVersion, fs, helpArgRegex, includeArgRegex, outputArgRegex, parseArgsFromArr, undefArgRegex, versionArgRegex;

fs = require('fs');

defineArgRegex = /^\-D/g;

undefArgRegex = /^\-U/g;

includeArgRegex = /^\-I/g;

outputArgRegex = /^\-o/g;

helpArgRegex = /^\-h/g;

versionArgRegex = /^\-v/g;

displayHelp = function() {
  return console.log('Usage: compp [-Dmacro[=defn]...] [-Umacro]\n             [-Idir] [-o outfile]\n             infile [outfile]');
};

displayVersion = function() {
  return fs.readFile(__dirname + "/../package.json", function(err, file) {
    if (err) {
      throw err;
    }
    return console.log("compp version " + (JSON.parse(file.toString()).version));
  });
};

parseArgsFromArr = function(argArr) {
  var arg, argv, defines, exec, help, i, includes, len, output, prevWasOutputFlag, undefs, version;
  exec = argArr.shift();
  help = false;
  version = false;
  defines = [];
  undefs = [];
  includes = [];
  output = [];
  argv = [];
  prevWasOutputFlag = false;
  for (i = 0, len = argArr.length; i < len; i++) {
    arg = argArr[i];
    if (prevWasOutputFlag) {
      output.push(arg);
      prevWasOutputFlag = false;
    } else if (arg.match(defineArgRegex)) {
      defines.push(arg.replace(defineArgRegex, ""));
    } else if (arg.match(undefArgRegex)) {
      undefs.push(arg.replace(undefArgRegex, ""));
    } else if (arg.match(includeArgRegex)) {
      includes.push(arg.replace(includeArgRegex, ""));
    } else if (arg.match(outputArgRegex)) {
      if ((arg.replace(outputArgRegex, "")) === "") {
        prevWasOutputFlag = true;
      } else {
        output.push(arg.replace(outputArgRegex, ""));
      }
    } else if (arg.match(helpArgRegex)) {
      help = true;
    } else if (arg.match(versionArgRegex)) {
      version = true;
    } else {
      argv.push(arg);
    }
  }
  return {
    exec: exec,
    argv: argv,
    help: help,
    version: version,
    defines: defines,
    undefs: undefs,
    includes: includes,
    output: output
  };
};

module.exports = {
  displayHelp: displayHelp,
  displayVersion: displayVersion,
  parseArgsFromArr: parseArgsFromArr
};

// Generated by CoffeeScript 1.9.2
var ConcatBackslashNewlinesStream, Transform, util;

util = require('util');

Transform = require('stream').Transform;

ConcatBackslashNewlinesStream = function() {
  if (!this instanceof ConcatBackslashNewlinesStream) {
    return new ConcatBackslashNewlinesStream;
  } else {
    Transform.call(this, {
      readableObjectMode: true
    });
    this.heldLines = [];
    return this.prevChar = "";
  }
};

util.inherits(ConcatBackslashNewlinesStream, Transform);

ConcatBackslashNewlinesStream.prototype.transformProto = function(chunk, encoding, callback) {
  var c, i, len, str;
  str = chunk.toString();
  for (i = 0, len = str.length; i < len; i++) {
    c = str[i];
    this.heldLines.push(c);
    if (c === "\n" && this.prevChar !== "\\") {
      this.emit('line', this.heldLines.join(""));
      this.heldLines = [];
    }
    this.prevChar = c;
  }
  this.push(chunk);
  return typeof callback === "function" ? callback() : void 0;
};

ConcatBackslashNewlinesStream.prototype._transform = ConcatBackslashNewlinesStream.prototype.transformProto;

module.exports = ConcatBackslashNewlinesStream;
